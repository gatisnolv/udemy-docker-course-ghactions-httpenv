---
name: 08 Build and Unit Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-image:
    name: Build Images
    runs-on: ubuntu-latest
    steps:


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#NEW: (START) ##########################################################
      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true # Export to Docker Engine rather than pushing to a registry
          tags: ${{ github.run_id }}
          # target: test # in Bret's examples this refers to a stage in his multi-stage dockerfile he has in his example repo, where as the one here is simple (not a multi-stage dockerfile) 
          cache-from: type=gha
          # cache-to: type=gha,mode=max # avoid writing this (single arch amd64 image) to GitHub Actions cache, overwriting the previous entry (the multi arch image from the 'Docker Build and Push to Docker Hub' step) from a prior run of the workflow, because then in the 'Docker Build and Push to Docker Hub' step both arm 64 and 32 bit images (parts of the multi arch image that the step produces) need to be rebuilt instead of being taken from the GitHub Actions cache. The amd64 image built in the 'Build and export to Docker' step is available and doesn't need to be rebuilt in the 'Docker Build and Push to Docker Hub' step thanks to the Docker build cache (both steps use the same builder and are part of a single job/ run on the same runner).
          platforms: linux/amd64

        # for simple tests (npm test, etc.) just run a local image in docker
      - name: Unit Testing in Docker
        run: |
          docker run --rm ${{ github.run_id }} echo "run test commands here"
#NEW: (END) ############################################################

      - name: Docker Metadata for Final Image Build
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ vars.DOCKERHUB_REPO }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=08
          # comment these out on all but 04-add-metadata.yaml to avoid overwriting image tags
          # type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
          # type=ref,event=pr
          # type=ref,event=branch
          # type=semver,pattern={{version}}
      
      - name: Docker Build and Push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64,linux/arm/v7
